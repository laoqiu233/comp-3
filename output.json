{"start_addr": 2, "instructions": [{"instr_index": 0, "op_code": "JMP", "operand_type": "stack_offset", "operand": 4, "comment": "return from function set_str"}, {"instr_index": 1, "op_code": "JMP", "operand_type": "stack_offset", "operand": 2, "comment": "return from function print_str"}, {"instr_index": 2, "op_code": "LD", "operand_type": "immediate", "operand": 0, "comment": "load literal 0"}, {"instr_index": 3, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "pushed variable \"i\" onto stack"}, {"instr_index": 4, "op_code": "LD", "operand_type": "immediate", "operand": 0, "comment": "load literal 0"}, {"instr_index": 5, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "pushed variable \"char\" onto stack"}, {"instr_index": 6, "op_code": "LD", "operand_type": "address", "operand": 69, "comment": "io read"}, {"instr_index": 7, "op_code": "ST", "operand_type": "stack_offset", "operand": 1, "comment": "update variable char"}, {"instr_index": 8, "op_code": "LD", "operand_type": "immediate", "operand": 0, "comment": "load literal 0"}, {"instr_index": 9, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push right operand of MathOp.NE to stack"}, {"instr_index": 10, "op_code": "LD", "operand_type": "stack_offset", "operand": 2, "comment": "load by identifier char from stack"}, {"instr_index": 11, "op_code": "CMP", "operand_type": "stack_offset", "operand": 1, "comment": "do MathOp.NE comparison"}, {"instr_index": 12, "op_code": "LD", "operand_type": "immediate", "operand": 1, "comment": "load true value"}, {"instr_index": 13, "op_code": "JNZ", "operand_type": "address", "operand": 15, "comment": "jump to return if MathOp.NE was success"}, {"instr_index": 14, "op_code": "LD", "operand_type": "immediate", "operand": 0, "comment": "load false value"}, {"instr_index": 15, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop right operand of MathOp.NE from stack"}, {"instr_index": 16, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push right operand of MathOp.AND to stack"}, {"instr_index": 17, "op_code": "LD", "operand_type": "immediate", "operand": 100, "comment": "load literal 100"}, {"instr_index": 18, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push right operand of MathOp.LT to stack"}, {"instr_index": 19, "op_code": "LD", "operand_type": "stack_offset", "operand": 4, "comment": "load by identifier i from stack"}, {"instr_index": 20, "op_code": "CMP", "operand_type": "stack_offset", "operand": 1, "comment": "do MathOp.LT comparison"}, {"instr_index": 21, "op_code": "LD", "operand_type": "immediate", "operand": 1, "comment": "load true value"}, {"instr_index": 22, "op_code": "JB", "operand_type": "address", "operand": 24, "comment": "jump to return if MathOp.LT was success"}, {"instr_index": 23, "op_code": "LD", "operand_type": "immediate", "operand": 0, "comment": "load false value"}, {"instr_index": 24, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop right operand of MathOp.LT from stack"}, {"instr_index": 25, "op_code": "AND", "operand_type": "stack_offset", "operand": 1, "comment": "do MathOp.AND math operation"}, {"instr_index": 26, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop right operand of MathOp.AND from stack"}, {"instr_index": 27, "op_code": "CMP", "operand_type": "immediate", "operand": 0, "comment": "check if false"}, {"instr_index": 28, "op_code": "JZ", "operand_type": "address", "operand": 49, "comment": "end while loop"}, {"instr_index": 29, "op_code": "LD", "operand_type": "immediate", "operand": 38, "comment": "load next instruction address (return from set_str)"}, {"instr_index": 30, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push return address onto the stack"}, {"instr_index": 31, "op_code": "LD", "operand_type": "immediate", "operand": 10, "comment": "load by identifier username from memory"}, {"instr_index": 32, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push parameter 0 onto stack"}, {"instr_index": 33, "op_code": "LD", "operand_type": "stack_offset", "operand": 4, "comment": "load by identifier i from stack"}, {"instr_index": 34, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push parameter 1 onto stack"}, {"instr_index": 35, "op_code": "LD", "operand_type": "stack_offset", "operand": 4, "comment": "load by identifier char from stack"}, {"instr_index": 36, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push parameter 2 onto stack"}, {"instr_index": 37, "op_code": "JMP", "operand_type": "address", "operand": 0, "comment": "function call"}, {"instr_index": 38, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop parameter 2 from stack"}, {"instr_index": 39, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop parameter 1 from stack"}, {"instr_index": 40, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop parameter 0 from stack"}, {"instr_index": 41, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop return address from stack"}, {"instr_index": 42, "op_code": "LD", "operand_type": "immediate", "operand": 1, "comment": "load literal 1"}, {"instr_index": 43, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push right operand of MathOp.ADD to stack"}, {"instr_index": 44, "op_code": "LD", "operand_type": "stack_offset", "operand": 3, "comment": "load by identifier i from stack"}, {"instr_index": 45, "op_code": "ADD", "operand_type": "stack_offset", "operand": 1, "comment": "do MathOp.ADD math operation"}, {"instr_index": 46, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop right operand of MathOp.ADD from stack"}, {"instr_index": 47, "op_code": "ST", "operand_type": "stack_offset", "operand": 2, "comment": "update variable i"}, {"instr_index": 48, "op_code": "JMP", "operand_type": "address", "operand": 8, "comment": "jump to while loop condition check"}, {"instr_index": 49, "op_code": "LD", "operand_type": "immediate", "operand": 54, "comment": "load next instruction address (return from print_str)"}, {"instr_index": 50, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push return address onto the stack"}, {"instr_index": 51, "op_code": "LD", "operand_type": "immediate", "operand": 0, "comment": "load string literal hello,  address"}, {"instr_index": 52, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push parameter 0 onto stack"}, {"instr_index": 53, "op_code": "JMP", "operand_type": "address", "operand": 1, "comment": "function call"}, {"instr_index": 54, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop parameter 0 from stack"}, {"instr_index": 55, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop return address from stack"}, {"instr_index": 56, "op_code": "LD", "operand_type": "immediate", "operand": 61, "comment": "load next instruction address (return from print_str)"}, {"instr_index": 57, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push return address onto the stack"}, {"instr_index": 58, "op_code": "LD", "operand_type": "immediate", "operand": 10, "comment": "load by identifier username from memory"}, {"instr_index": 59, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push parameter 0 onto stack"}, {"instr_index": 60, "op_code": "JMP", "operand_type": "address", "operand": 1, "comment": "function call"}, {"instr_index": 61, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop parameter 0 from stack"}, {"instr_index": 62, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop return address from stack"}, {"instr_index": 63, "op_code": "LD", "operand_type": "immediate", "operand": 68, "comment": "load next instruction address (return from print_str)"}, {"instr_index": 64, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push return address onto the stack"}, {"instr_index": 65, "op_code": "LD", "operand_type": "immediate", "operand": 8, "comment": "load string literal ! address"}, {"instr_index": 66, "op_code": "PUSH", "operand_type": "no_operand", "operand": 0, "comment": "push parameter 0 onto stack"}, {"instr_index": 67, "op_code": "JMP", "operand_type": "address", "operand": 1, "comment": "function call"}, {"instr_index": 68, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop parameter 0 from stack"}, {"instr_index": 69, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "pop return address from stack"}, {"instr_index": 70, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "popped variable \"char\" out of stack"}, {"instr_index": 71, "op_code": "POP", "operand_type": "no_operand", "operand": 0, "comment": "popped variable \"i\" out of stack"}, {"instr_index": 72, "op_code": "HLT", "operand_type": "no_operand", "operand": 0, "comment": ""}], "data_memory": [{"value": 104, "identifier": "hello, "}, {"value": 101, "identifier": null}, {"value": 108, "identifier": null}, {"value": 108, "identifier": null}, {"value": 111, "identifier": null}, {"value": 44, "identifier": null}, {"value": 32, "identifier": null}, {"value": 0, "identifier": null}, {"value": 33, "identifier": "!"}, {"value": 0, "identifier": null}, {"value": 0, "identifier": "username"}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}, {"value": 0, "identifier": null}]}