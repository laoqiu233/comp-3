(defun get_string_char (s i)
    (let ( (addr (+ s (divide i 4))) (j (remainder i 4)) (char4 0) )
        (set char4 (@ addr))
        (loop while (> j 0) do
            (set char4 (>> char4 8))
            (set j (- j 1))
        )
        (& char4 255)
    )
)

(defun set_string_char (s i val)
    (set val (& val 255))
    (let ( (addr (+ s (divide i 4))) (j (remainder i 4)) (char4 0) (bit_mask 0) )
        (set bit_mask (- bit_mask 256))
        (set char4 (@ addr))
        (loop while (> j 0) do
            (set val (<< val 8))
            (set bit_mask (+ 255 (<< bit_mask 8)))
            (set j (- j 1))
        )
        (set_ptr addr (| val (& char4 bit_mask)))
    )
)

(defun print_string (s)
    (let ( (char 0) (j 0) (continue true) )
        (set char (@ s))
        (loop while continue do
            (if (= (& char 255) 0)
                (set continue false)
                (
                    (put_char char)
                    (set char (>> char 8))
                    (set j (+ j 1))
                    (if (>= j 4)
                        (
                            (set j 0)
                            (set s (+ s 1))
                            (set char (@ s))
                        )
                    )
                )
            )
        )
    )
)

(alloc_str print_int_buffer 100)

(defun print_int(val)
    (let ((i 1))
        (let ((rem (remainder val 10)))
            (set_string_char print_int_buffer 0 (+ rem 48))
            (set val (divide val 10))
        )
        (loop while (> val 0) do
            (let ( (rem (remainder val 10)) )
                (set_string_char print_int_buffer i (+ rem 48))
                (set val (divide val 10))
                (set i (+ i 1))
            )
        )
        (loop while (> i 0) do
            (put_char (get_string_char print_int_buffer  (set i (- i 1))))
        )
    )
)